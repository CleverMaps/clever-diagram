{"version":3,"file":"can-diagram.min.js","sources":["../src/utils/Observable.js","../src/Diagram.js"],"sourcesContent":["/**\r\n * @class\r\n * Observable class, handles binding and firing events\r\n * @param {Array} events list of events for this observable\r\n */\r\nexport default class Observable {\r\n    /**\r\n     * @param {Array} events\r\n     */\r\n    constructor(events = []) {\r\n        // create a map of handlers where each event has an array of bound handlers\r\n        this._handlers = events.reduce((acc, cur)=>{\r\n            acc[cur] = [];\r\n            return acc;\r\n        },{});\r\n    }\r\n\r\n\t/**\r\n\t * @public\r\n\t * Bind event\r\n\t * @param {String} event event name\r\n\t * @param {Function} handler event handler\r\n\t */\r\n    on(event, handler) {\r\n        if (!(event in this._handlers)) throw \"No such event: \" + event;\r\n\t\tthis._handlers[event].push(handler);\r\n\t\treturn this;\r\n    }\r\n\r\n\t/**\r\n\t * @public\r\n\t * Unbind event\r\n\t * @param {String} event event name\r\n\t * @param {Function} [handler] event handler, optional\r\n\t */\r\n    off(event, handler) {\r\n        if (!(event in this._handlers)) throw \"No such event: \" + event;\r\n\t\tif (!handler) {\r\n\t\t\tthis._handlers[event] = [];\r\n\t\t} else {\r\n\t\t\tvar handlers = this._handlers[event];\r\n\t\t\tvar index = handlers.indexOf(handler);\r\n\t\t\tif (index != -1){\r\n\t\t\t\thandlers.splice(index, 1);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this;\r\n    }\r\n\r\n\t/**\r\n\t * @public\r\n\t * Fire widget event\r\n\t * @param {String} event event name\r\n\t * @param {*} ...args event arguments\r\n\t */\r\n\tfire(event, ...args) {\r\n\t\tif (!(event in this._handlers)) throw \"No such event: \" + event;\r\n\t\tvar handlers = this._handlers[event];\r\n\t\tfor (var i = 0; i < handlers.length; i++) {\r\n\t\t\thandlers[i].apply(this, args);\r\n\t\t}\r\n\t\treturn this;\r\n    }\r\n\r\n\t/**\r\n\t * @public\r\n\t * Destorys this observable, removes events and so on \r\n\t */\r\n\tdestroy() {\r\n\t\tthis._handlers = null;\r\n\t\treturn this;\r\n    }\r\n\t\r\n}","import Observable from \"./utils/Observable\";\r\nimport style from \"./Diagram.css\";\r\nimport * as d3 from \"d3\";\r\nimport * as ELK from \"ELK\";\r\n\r\n/**\r\n * @class\r\n * Main Diagram class\r\n * @param {Object} options\r\n */\r\nexport default class Diagram {\r\n\tconstructor(options) {\r\n\t\t/**\r\n\t\t * @private\r\n\t\t * observable handler\r\n\t\t */\r\n\t\tthis._observable = new Observable([\r\n\t\t\t/**\r\n\t\t\t * @event \r\n\t\t\t * Fires when node is clicked\r\n\t\t\t * @param {String} node name\r\n\t\t\t */\r\n\t\t\t\"nodeClick\",\r\n\t\t\t/**\r\n\t\t\t * @event \r\n\t\t\t * Fires when node is highlighted\r\n\t\t\t * @param {String} node name\r\n\t\t\t * @param {Boolean} highlighted\r\n\t\t\t */\r\n\t\t\t\"nodeHighlight\"\r\n\t\t]);\r\n\r\n\t\tthis._options = options || {};\r\n\r\n\t\tif (!options.elkWorkerUrl){\r\n\t\t\tthrow \"ELK worker URL has to be specified\";\r\n\t\t}\r\n\r\n\t\tthis._elk = new ELK({\r\n\t\t\tworkerUrl: options.elkWorkerUrl\r\n\t\t});\t\t\r\n\r\n\t\t/**\r\n\t\t * @private \r\n\t\t * DOM container for diagram\r\n\t\t */\r\n\t\tthis._container = null;\r\n\r\n\t\tthis._groupColors = options.groupColors || {};\r\n\t}\r\n\r\n\t/**\r\n\t * Bind widget event\r\n\t * @param {String} event event name\r\n\t * @param {Function} handler event handler\r\n\t * @returns {Bar} returns this widget instance\r\n\t */\r\n\ton(eventName, handler) {\r\n\t\tthis._observable.on(eventName, handler);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Unbind widget event\r\n\t * @param {String} event event name\r\n\t * @param {Function} [handler] event handler\r\n\t * @returns {Bar} returns this widget instance\r\n\t */\r\n\toff(eventName, handler) {\r\n\t\tthis._observable.off(eventName, handler);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Destroys widget\r\n\t * @returns {Bar} returns this widget instance\r\n\t */\r\n\tdestroy() {\r\n\t\tthis._observable.destroy();\r\n\t\tthis._el.remove();\r\n\t\tthis._group.remove();\r\n\t\treturn this;\r\n\t}\r\n\r\n\t/**\r\n\t * Render logic of this widget\r\n\t * @param {String|DOMElement} selector selector or DOM element \r\n\t * @returns {Bar} returns this widget instance\r\n\t */\r\n\trender(selector) {\r\n\t\tthis._container = d3.select(selector);\r\n\r\n\t\tthis._svg = this._container\r\n\t\t\t.append(\"svg\")\r\n\t\t\t.style(\"position\", \"absolute\")\r\n\t\t\t.attr(\"pointer-events\", \"none\");\r\n\r\n\t\tthis._group = this._svg.append(\"g\");\r\n\r\n\t\t// define an arrow head\r\n\t\tthis._group.append(\"svg:defs\")\r\n\t\t\t.append(\"svg:marker\")\r\n\t\t\t.attr(\"id\", \"end\")\r\n\t\t\t.attr(\"viewBox\", \"0 -5 10 10\")\r\n\t\t\t.attr(\"refX\", 10)\r\n\t\t\t.attr(\"refY\", 0)\r\n\t\t\t.attr(\"markerWidth\", 4)        // marker settings\r\n\t\t\t.attr(\"markerHeight\", 4)\r\n\t\t\t.attr(\"orient\", \"auto\")\r\n\t\t\t.style(\"fill\", \"#546E7A\")\r\n\t\t\t.style(\"stroke-opacity\", 0.6)  // arrowhead color\r\n\t\t\t.append(\"svg:path\")\r\n\t\t\t.attr(\"d\", \"M0,-5L10,0L0,5\");\r\n\r\n\t\tthis._el = this._container.append(\"div\").classed(style.diagram, true);\r\n\t}\r\n\r\n\t_getRootProperties(){\r\n\t\treturn { \r\n\t\t\t'algorithm': 'layered',\r\n\t\t\t'direction':'RIGHT'\r\n\t\t}\r\n\t}\r\n\r\n\t_getElkGraph() {\r\n\t\treturn {\r\n\t\t\t\"id\": \"root\",\r\n\t\t\tproperties: this._getRootProperties(),\r\n\t\t\t\"children\": this._nodes.map(node => { \r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: node.name,\r\n\t\t\t\t\twidth: 200,\r\n\t\t\t\t\theight: 50\r\n\t\t\t\t}\r\n\t\t\t}),\r\n\t\t\t\"edges\": this._edges.map((edge, index) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tid: \"edge_\" + index,\r\n\t\t\t\t\tsources: [edge.start],\r\n\t\t\t\t\ttargets: [edge.end]\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\t_setGraphSize(nodes) {\r\n\t\tvar maxHeight = Math.max.apply(Math, nodes.map(node => node.y + node.height));\r\n\t\tvar maxWidth = Math.max.apply(Math, nodes.map(node => node.x + node.width));\r\n\r\n\t\tthis._el.style(\"width\", maxWidth + \"px\");\r\n\t\tthis._el.style(\"height\", maxHeight + \"px\");\r\n\r\n\t\tthis._svg.attr(\"width\", maxWidth);\r\n\t\tthis._svg.attr(\"height\", maxHeight);\r\n\t}\r\n\r\n\t/**\r\n\t * Renders nodes\r\n\t */\r\n\t_renderNodes() {\r\n\t\tconst graph = this._getElkGraph();\r\n\r\n\t\treturn this._elk.layout(graph).then(layout => {\r\n\t\t\tthis._nodes.forEach((node, i) => {\r\n\t\t\t\tvar styles = {\r\n\t\t\t\t\ttop: layout.children[i].y,\r\n\t\t\t\t\tleft: layout.children[i].x,\r\n\t\t\t\t\twidth: layout.children[i].width,\r\n\t\t\t\t\theight: layout.children[i].height\r\n\t\t\t\t};\r\n\r\n\t\t\t\tthis._renderNode(node, styles);\r\n\t\t\t});\r\n\r\n\t\t\tthis._renderEdges(layout);\r\n\t\t\tthis._setGraphSize(layout.children);\r\n\t\t});\r\n\t}\r\n\r\n\r\n/**\r\n * @public\r\n * Selects node \r\n * @param nodeName\r\n * @param selected\r\n */\r\nselectNode(nodeName, selected){\r\n\tvar el = document.getElementById(nodeName);\r\n\tif (!el) throw \"Node \" + nodeName + \" doesn't exist or graph hasn't been rendered yet\";\r\n\r\n\tvar nodeEl = d3.select(el);\r\n\r\n\tvar selectedClass = style[\"node-selected\"];\r\n\r\n\tif (selected) {\r\n\t\td3.select(\".\" + selectedClass).classed(selectedClass, false);\r\n\t\tnodeEl.classed(selectedClass, true);\r\n\r\n\t\tthis._selectedNodeName = nodeName;\r\n\t} else {\r\n\t\td3.select(\".\" + selectedClass).classed(selectedClass, false);\r\n\t}\r\n}\r\n\r\n/**\r\n * @public\r\n * Highlights node \r\n * @param nodeName\r\n * @param highlighted\r\n */\r\nhighlightNode(nodeName, highlighted){\r\n\tvar nodeEl = d3.select(\"#\" + nodeName);\r\n\tvar highlightedClass = style[\"node-highlighted\"];\r\n\r\n\tif (this._dragging && d3.event.relatedTarget && d3.event.relatedTarget.tagName == \"path\") {\r\n\t\treturn;\r\n\t}\r\n\r\n\tif (highlighted) {\r\n\t\td3.select(\".\" + highlightedClass).classed(highlightedClass, false);\r\n\t\tnodeEl.classed(highlightedClass, true);\r\n\t\tthis._observable.fire(\"nodeHighlight\", nodeName, highlighted);\r\n\t} else {\r\n\t\td3.select(\".\" + highlightedClass).classed(highlightedClass, false);\r\n\t\tthis._observable.fire(\"nodeHighlight\", nodeName, highlighted);\r\n\t}\r\n}\r\n\r\n_onMouseDown(nodeName){\r\n\tthis._dragging = true;\r\n\t// save box on mouse down so we can compare on mouseup\r\n\tthis._mouseDownBB = document.getElementById(nodeName).getBoundingClientRect();\r\n}\r\n\r\n_onMouseUp(nodeName){\r\n\tvar bb = document.getElementById(nodeName).getBoundingClientRect();\r\n\t// only call select when bounding box is same\r\n\tif (this._mouseDownBB && this._mouseDownBB.top == bb.top && this._mouseDownBB.left == bb.left) {\r\n\t\tthis._observable.fire(\"nodeClick\", nodeName);\r\n\t}\r\n\tthis._dragging = false;\r\n}\r\n/**\r\n * Renders node \r\n * @param node\r\n */\r\n_renderNode(node, styles){\r\n\tvar color = this._groupColors[node.group] || \"#2196F3\";\r\n\tvar styleStr = Object.keys(styles).map(style => style + \":\" + styles[style] + \"px\").join(\";\") + \"; background-color:\" + color;\r\n\tvar nodeEl = this._el\r\n\t\t.append(\"div\")\r\n\t\t.attr(\"style\", styleStr)\r\n\t\t.attr(\"class\", style.node)\r\n\t\t.attr(\"id\", node.name)\r\n\t\t.on(\"mousedown\", () => {\r\n\t\t\tthis._onMouseDown(node.name);\r\n\t\t})\r\n\t\t.on(\"mouseup\", () => {\r\n\t\t\tthis._onMouseUp(node.name);\r\n\t\t})\r\n\t\t.on(\"mouseover\", () => {\r\n\t\t\tthis.highlightNode(node.name, true);\r\n\t\t}).on(\"mouseout\", () => {\r\n\t\t\tthis.highlightNode(node.name, false);\r\n\t\t});\r\n\r\n\tvar textEl = nodeEl\r\n\t\t.append(\"div\")\r\n\t\t.attr(\"class\", style[\"node-text\"])\r\n\r\n\ttextEl\r\n\t\t.append(\"i\")\r\n\t\t.attr(\"class\", \"zmdi \"+node.icon || \"\")\r\n\t\t.classed(style[\"icon\"],true )\r\n\r\n\ttextEl.append(\"span\").html(node.name)\r\n}\r\n\r\n_getEdgeOverlay(edge){\r\n\treturn {\r\n\t\t\"arrow\": [[\"PlainArrow\", { location: 1, width: 10, length: 10 }]],\r\n\t\t\"link\": [],\r\n\t}[edge.type]\r\n}\r\n\r\n/**\r\n * Renders edges\r\n */\r\n_renderEdges(layout){\r\n\tthis._edges.forEach((edge, i) => {\r\n\t\tvar link = this._group.append(\"path\")\r\n\t\t\t.attr(\"class\", \"link\")\r\n\t\t\t.attr(\"stroke\", \"#546E7A\")\r\n\t\t\t.attr(\"stroke-width\", 2)\r\n\t\t\t.attr(\"fill\", \"transparent\")\r\n\t\t\t.attr(\"d\", () => {\r\n\t\t\t\tvar d = layout.edges[i].sections[0];\r\n\t\t\t\tvar path = \"\";\r\n\t\t\t\tif (d.startPoint && d.endPoint) {\r\n\t\t\t\t\tpath += \"M\" + d.startPoint.x + \" \" + d.startPoint.y + \" \";\r\n\t\t\t\t\t(d.bendPoints || []).forEach(function (bp) {\r\n\t\t\t\t\t\tpath += \"L\" + bp.x + \" \" + bp.y + \" \";\r\n\t\t\t\t\t});\r\n\t\t\t\t\tpath += \"L\" + d.endPoint.x + \" \" + d.endPoint.y + \" \";\r\n\t\t\t\t}\r\n\t\t\t\treturn path;\r\n\t\t\t})\r\n\r\n\t\tif (edge.type == \"arrow\") {\r\n\t\t\tlink.attr(\"marker-end\", \"url(#end)\");\r\n\t\t}\r\n\r\n\t});\r\n}\r\n\r\n/**\r\n * Sets widget data\r\n * @param {Array} data\r\n * @returns {Bar} returns this widget instance \r\n */\r\nsetData(data) {\r\n\tif (!this._container) throw \"Diagram is not rendered\"\r\n\r\n\tthis._el.html(\"\");\r\n\r\n\tthis._nodes = data.nodes || [];\r\n\tthis._edges = data.edges || [];\r\n\r\n\treturn this._renderNodes();\r\n}\r\n}\r\n"],"names":["Observable","events","_handlers","reduce","acc","cur","event","handler","this","push","handlers","index","indexOf","splice","args","i","length","apply","options","_observable","_options","elkWorkerUrl","_elk","ELK","_container","_groupColors","groupColors","eventName","on","off","destroy","_el","remove","_group","selector","d3","_svg","append","style","attr","classed","diagram","_getRootProperties","_nodes","map","node","name","_edges","edge","start","end","nodes","maxHeight","Math","max","y","height","maxWidth","x","width","graph","_getElkGraph","layout","then","forEach","styles","children","_renderNode","_renderEdges","_setGraphSize","nodeName","selected","el","document","getElementById","nodeEl","selectedClass","_selectedNodeName","highlighted","highlightedClass","_dragging","relatedTarget","tagName","fire","_mouseDownBB","getBoundingClientRect","bb","top","left","color","group","styleStr","Object","keys","join","_onMouseDown","_onMouseUp","highlightNode","textEl","icon","html","location","type","link","_this3","d","edges","sections","path","startPoint","endPoint","bendPoints","bp","data","_renderNodes"],"mappings":"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"}