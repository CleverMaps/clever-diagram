{"version":3,"file":"diagram.min.js","sources":["../src/utils/Observable.js","../src/Diagram.js"],"sourcesContent":["/**\r\n * @class\r\n * Observable class, handles binding and firing events\r\n * @param {Array} events list of events for this observable\r\n */\r\nexport default class Observable {\r\n    /**\r\n     * @param {Array} events\r\n     */\r\n    constructor(events = []) {\r\n        // create a map of handlers where each event has an array of bound handlers\r\n        this._handlers = events.reduce((acc, cur)=>{\r\n            acc[cur] = [];\r\n            return acc;\r\n        },{});\r\n    }\r\n\r\n\t/**\r\n\t * @public\r\n\t * Bind event\r\n\t * @param {String} event event name\r\n\t * @param {Function} handler event handler\r\n\t */\r\n    on(event, handler) {\r\n        if (!(event in this._handlers)) throw \"No such event: \" + event;\r\n\t\tthis._handlers[event].push(handler);\r\n\t\treturn this;\r\n    }\r\n\r\n\t/**\r\n\t * @public\r\n\t * Unbind event\r\n\t * @param {String} event event name\r\n\t * @param {Function} [handler] event handler, optional\r\n\t */\r\n    off(event, handler) {\r\n        if (!(event in this._handlers)) throw \"No such event: \" + event;\r\n\t\tif (!handler) {\r\n\t\t\tthis._handlers[event] = [];\r\n\t\t} else {\r\n\t\t\tvar handlers = this._handlers[event];\r\n\t\t\tvar index = handlers.indexOf(handler);\r\n\t\t\tif (index != -1){\r\n\t\t\t\thandlers.splice(index, 1);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this;\r\n    }\r\n\r\n\t/**\r\n\t * @public\r\n\t * Fire widget event\r\n\t * @param {String} event event name\r\n\t * @param {*} ...args event arguments\r\n\t */\r\n\tfire(event, ...args) {\r\n\t\tif (!(event in this._handlers)) throw \"No such event: \" + event;\r\n\t\tvar handlers = this._handlers[event];\r\n\t\tfor (var i = 0; i < handlers.length; i++) {\r\n\t\t\thandlers[i].apply(this, args);\r\n\t\t}\r\n\t\treturn this;\r\n    }\r\n\r\n\t/**\r\n\t * @public\r\n\t * Destorys this observable, removes events and so on \r\n\t */\r\n\tdestroy() {\r\n\t\tthis._handlers = null;\r\n\t\treturn this;\r\n    }\r\n\t\r\n}","import Observable from \"./utils/Observable\";\nimport style from \"./Diagram.css\";\nimport * as d3 from \"d3\";\nimport * as jsPlumb from \"jsPlumb\";\nimport * as $klay from \"$klay\";\n\n/**\n * @class\n * Main Diagram class\n * @param {Object} options\n */\nexport default class Diagram {\n\tconstructor(options) {\n\t\t/**\n\t\t * @private\n\t\t * observable handler\n\t\t */\n\t\tthis._observable = new Observable([\n\t\t\t/**\n\t\t\t * @event \n\t\t\t * Fires when node is selected\n\t\t\t * @param {String} node name\n\t\t\t */\n\t\t\t\"nodeSelected\",\n\t\t\t/**\n\t\t\t * @event \n\t\t\t * Fires when node is selected\n\t\t\t * @param {String} node name\n\t\t\t */\n\t\t\t\"nodeDeselected\",\t\t\t\n\t\t\t/**\n\t\t\t * @event \n\t\t\t * Fires when node is highlighted\n\t\t\t * @param {String} node name\n\t\t\t * @param {Boolean} highlighted\n\t\t\t */\n\t\t\t\"nodeHighlight\"\n\t\t]);\n\n\t\tthis._options = options || {};\n\n\t\t/**\n\t\t * @private \n\t\t * DOM container for diagram\n\t\t */\n\t\tthis._container = null;\n\n\t\tthis._groupColors = options.groupColors || {};\n\t}\n\n\t/**\n\t * Bind widget event\n\t * @param {String} event event name\n\t * @param {Function} handler event handler\n\t * @returns {Bar} returns this widget instance\n\t */\n\ton(eventName, handler) {\n\t\tthis._observable.on(eventName, handler);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Unbind widget event\n\t * @param {String} event event name\n\t * @param {Function} [handler] event handler\n\t * @returns {Bar} returns this widget instance\n\t */\n\toff(eventName, handler) {\n\t\tthis._observable.off(eventName, handler);\n\t\treturn this;\n\t}\t\n\n\t/**\n\t * Destroys widget\n\t * @returns {Bar} returns this widget instance\n\t */\n\tdestroy() {\n\t\tthis._observable.destroy();\n\t\tthis._plumb.clear();\n\t\tthis._el.remove();\n\t\treturn this;\n\t}\t\n\n\t/**\n\t * Render logic of this widget\n\t * @param {String|DOMElement} selector selector or DOM element \n\t * @returns {Bar} returns this widget instance\n\t */\n\trender(selector) {\n\t\tthis._container = d3.select(selector);\n\t\tthis._el = this._container.append(\"div\").classed(style.diagram, true);\n\t\tthis._plumb = jsPlumb.getInstance();\n\n\t\t// this._group = d3.select(\"#content\")\n\t\t// \t.append(\"svg\")\n\t\t// \t.attr(\"width\", width)\n\t\t// \t.attr(\"height\", height)\n\t\t// \t.call(zoom)\n\t\t// \t.append(\"g\");\t\t\n\t}\n\n\t_getKlayGraph(){\n\t\treturn {\n\t\t\t\"id\": \"root\",\n\t\t\t\"children\": this._nodes.map(node=>{\n\t\t\t\treturn {\n\t\t\t\t\tid:node.name,\n\t\t\t\t\twidth:150,\n\t\t\t\t\theight:50\n\t\t\t\t}\n\t\t\t}),\n\t\t\t\"edges\": this._edges.map((edge, index)=>{\n\t\t\t\treturn {\n\t\t\t\t\tid:\"edge_\"+index,\n\t\t\t\t\tsource:edge.start,\n\t\t\t\t\ttarget:edge.end\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\n\t/**\n\t * Renders nodes\n\t */\n\t_renderNodes(){\n\t\treturn new Promise((success, failure)=>{\n\t\t\t$klay.layout({\n\t\t\t\tgraph: this._getKlayGraph(),\n\t\t\t\toptions:{\n\t\t\t\t\tspacing:40,\n\t\t\t\t\talgorithm: \"de.cau.cs.kieler.klay.layered\",\n\t\t\t\t\tlayoutHierarchy: true,\n\t\t\t\t\tintCoordinates: true,\n\t\t\t\t\tdirection: \"RIGHT\",\n\t\t\t\t\t//thoroughness:50,\n\t\t\t\t\t//crossMin:\"LAYER_SWEEP\",\n\t\t\t\t\tmergeEdges:true,\n\t\t\t\t\t//linearSegmentsDeflectionDampening:0.5,\n\t\t\t\t\tlayerConstraint:\"LAST_SEPARATE\",\n\t\t\t\t\tnodePlace:\"BRANDES_KOEPF\", // LINEAR_SEGMENTS BRANDES_KOEPF\n\t\t\t\t\tnodeLayering: \"NETWORK_SIMPLEX\" // NETWORK_SIMPLEX LONGEST_PATH INTERACTIVE\n\t\t\t\t},\n\t\t\t\tsuccess: (layouted)=>{\n\t\t\t\t\tthis._nodes.forEach((node, i)=>{\n\t\t\t\t\t\tvar styles = {\n\t\t\t\t\t\t\ttop:layouted.children[i].y,\n\t\t\t\t\t\t\tleft:layouted.children[i].x,\n\t\t\t\t\t\t\twidth:layouted.children[i].width,\n\t\t\t\t\t\t\theight:layouted.children[i].height\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tthis._renderNode(node, styles);\n\t\t\t\t\t});\n\n\t\t\t\t\tthis._renderEdges();\n\t\t\t\t\tthis._plumb.draggable(document.querySelectorAll(\".\"+style.node));\t\n\t\t\t\t\tsuccess();\t\t\t\t\t\t\t\t\t\n\t\t\t\t},\n\t\t\t\terror: function(error) { \n\t\t\t\t\tconsole.log(error); \n\t\t\t\t\tfailure();\n\t\t\t\t}\n\t\t\t});\t\t\n\t\t});\n\t}\n\n\t/**\n\t * @public\n\t * Selects node \n\t * @param nodeName\n\t */\n\tselectNode(nodeName){\n\t\tvar el = document.getElementById(nodeName);\n\t\tif (!el) throw \"Node \"+nodeName + \" doesn't exist or graph hasn't been rendered yet\";\n\n\t\tvar nodeEl = d3.select(el);\n\n\t\tvar selectedClass = style[\"node-selected\"];\n\n\t\tif (!nodeEl.classed(selectedClass)){\n\t\t\td3.select(\".\"+selectedClass).classed(selectedClass, false);\n\t\t\tnodeEl.classed(selectedClass, true);\n\t\t\tthis._observable.fire(\"nodeSelected\", nodeName);\n\n\t\t\tif (this._selectedNodeName && nodeName != this._selectedNodeName){\n\t\t\t\tthis._observable.fire(\"nodeDeselected\", this._selectedNodeName);\n\t\t\t}\n\t\t\t\n\t\t\tthis._selectedNodeName = nodeName;\n\t\t} else {\n\t\t\td3.select(\".\"+selectedClass).classed(selectedClass, false);\n\t\t\tthis._observable.fire(\"nodeDeselected\", nodeName);\n\t\t}\n\t}\n\n\t/**\n\t * @public\n\t * Highlights node \n\t * @param nodeName\n\t * @param highlighted\n\t */\n\thighlightNode(nodeName, highlighted){\n\t\tvar nodeEl = d3.select(\"#\"+nodeName);\n\t\tvar highlightedClass = style[\"node-highlighted\"];\n\n\t\tif (this._dragging && d3.event.relatedTarget && d3.event.relatedTarget.tagName == \"path\"){\n\t\t\treturn;\n\t\t}\n\n\t\tif (highlighted){\n\t\t\td3.select(\".\"+highlightedClass).classed(highlightedClass, false);\n\t\t\tnodeEl.classed(highlightedClass, true);\n\t\t\tthis._observable.fire(\"nodeHighlight\", nodeName, highlighted);\n\t\t} else {\n\t\t\td3.select(\".\"+highlightedClass).classed(highlightedClass, false);\n\t\t\tthis._observable.fire(\"nodeHighlight\", nodeName, highlighted);\n\t\t}\n\t}\n\t\n\t_onMouseDown(nodeName){\n\t\tthis._dragging = true;\n\t\t// save box on mouse down so we can compare on mouseup\n\t\tthis._mouseDownBB = document.getElementById(nodeName).getBoundingClientRect();\n\t}\n\n\t_onMouseUp(nodeName){\n\t\tvar bb = document.getElementById(nodeName).getBoundingClientRect();\n\t\t// only call select when bounding box is same\n\t\tif (this._mouseDownBB && this._mouseDownBB.top == bb.top && this._mouseDownBB.left == bb.left){\n\t\t\tthis.selectNode(nodeName);\n\t\t}\n\t\tthis._dragging = false;\t\t\n\t}\n\t/**\n\t * Renders node \n\t * @param node\n\t */\n\t_renderNode(node, styles){\n\t\tvar color = this._groupColors[node.group] || \"#2196F3\";\n\t\tvar styleStr = Object.keys(styles).map(style=>style+\":\"+styles[style]+\"px\").join(\";\")+\"; background-color:\"+color;\n\t\tvar nodeEl = this._el\n\t\t\t.append(\"div\")\n\t\t\t.attr(\"style\", styleStr)\n\t\t\t.attr(\"class\", style.node)\n\t\t\t.attr(\"id\", node.name)\n\t\t\t.on(\"mousedown\", ()=>{\n\t\t\t\tthis._onMouseDown(node.name);\n\t\t\t})\n\t\t\t.on(\"mouseup\", ()=>{\n\t\t\t\tthis._onMouseUp(node.name);\n\t\t\t})\n\t\t\t.on(\"mouseover\", ()=>{\n\t\t\t\tthis.highlightNode(node.name, true);\n\t\t\t}).on(\"mouseout\", ()=>{\n\t\t\t\tthis.highlightNode(node.name, false);\n\t\t\t});\n\n\t\tnodeEl\t\n\t\t\t.append(\"div\")\n\t\t\t.attr(\"class\", style[\"node-text\"])\n\t\t\t.html(node.name)\n\t}\n\n\t_getEdgeOverlay(edge){\n\t\treturn {\n\t\t\t\"arrow\":[ [ \"PlainArrow\", { location:1, width:10, length:10 } ] ],\n\t\t\t\"link\":[],\n\t\t}[edge.type]\n\t}\n\n\t/**\n\t * Renders edges\n\t */\n\t_renderEdges(){\n\t\tthis._edges.forEach(edge=>{\n\t\t\tvar overlay = this._getEdgeOverlay(edge);\n\t\t\tthis._plumb.connect({\n\t\t\t\tsource:edge.start,\n\t\t\t\ttarget:edge.end,\n\t\t\t\tanchor:[ \"TopCenter\",\"RightMiddle\",\"BottomCenter\",\"LeftMiddle\" ],\n\t\t\t\tendpoint:\"Blank\",\n\t\t\t\tpaintStyle:{ stroke:'#546E7A', strokeWidth:2 },\n\t\t\t\tconnector :\"Straight\", //\"Flowchart\" \"Straight\",\n\t\t\t\toverlays: overlay,\n\t\t\t\tendpointStyle:{ fill: \"black\" }\t\t\t\t\n\t\t\t});\n\t\t});\n\t}\n\n\t// /**\n\t//  * Renders edges\n\t//  */\n\t// _renderEdges(){\n\t// \t// this._edges.forEach(edge=>{\n\t// \t// \tvar overlay = this._getEdgeOverlay(edge);\n\t// \t// \tjsPlumb.connect({\n\t// \t// \t\tsource:edge.start,\n\t// \t// \t\ttarget:edge.end,\n\t// \t// \t\tanchor:[ \"TopCenter\",\"RightMiddle\",\"BottomCenter\",\"LeftMiddle\" ],\n\t// \t// \t\tendpoint:\"Blank\",\n\t// \t// \t\tpaintStyle:{ stroke:'#546E7A', strokeWidth:2 },\n\t// \t// \t\tconnector :\"Straight\", //\"Flowchart\" \"Straight\",\n\t// \t// \t\toverlays: overlay,\n\t// \t// \t\tendpointStyle:{ fill: \"black\" }\t\t\t\t\n\t// \t// \t});\n\t// \t// });\n\n\t// \t// #2 add paths with arrows for the edges\n\n\t// \tthis._edges.forEach(edge=>{\n\t// \t\tvar link = this._groupEl.append(\"path\")\n\t// \t\t.attr(\"class\", \"link\")\n\t// \t\t.attr(\"d\", ()=>{\n\t// \t\t\tvar path = \"\";\n\t// \t\t\tif (d.sourcePoint && d.targetPoint) {\n\t// \t\t\t\tpath += \"M\" + d.sourcePoint.x + \" \" + d.sourcePoint.y + \" \";\n\t// \t\t\t\t(d.bendPoints || []).forEach(function(bp, i) {\n\t// \t\t\t\t\tpath += \"L\" + bp.x + \" \" + bp.y + \" \";\n\t// \t\t\t\t});\n\t// \t\t\t\tpath += \"L\" + d.targetPoint.x + \" \" + d.targetPoint.y + \" \";\n\t// \t\t\t}\n\t// \t\t\treturn path;\n\t// \t\t})\n\t// \t\t.attr(\"marker-end\", \"url(#end)\");\n\t// \t});\n\t// }\t\n\n\t/**\n\t * Sets widget data\n\t * @param {Array} data\n\t * @returns {Bar} returns this widget instance \n\t */\n\tsetData(data) {\n\t\tif (!this._container) throw \"Diagram is not rendered\"\n\n\t\tthis._el.html(\"\");\n\n\t\tthis._nodes = data.nodes || [];\n\t\tthis._edges = data.edges || [];\n\n\t\treturn this._renderNodes();\n\t}\n}\n"],"names":["Observable","events","_handlers","reduce","acc","cur","event","handler","this","push","handlers","index","indexOf","splice","args","i","length","apply","options","_observable","_options","_container","_groupColors","groupColors","eventName","on","off","destroy","_plumb","clear","_el","remove","selector","d3","append","classed","style","diagram","jsPlumb","_nodes","map","node","name","_edges","edge","start","end","Promise","success","failure","_this","_getKlayGraph","layouted","forEach","styles","children","y","x","width","height","_renderNode","_renderEdges","draggable","document","querySelectorAll","error","log","nodeName","el","getElementById","nodeEl","selectedClass","fire","_selectedNodeName","highlighted","highlightedClass","_dragging","relatedTarget","tagName","_mouseDownBB","getBoundingClientRect","bb","top","left","selectNode","color","group","styleStr","Object","keys","join","attr","_onMouseDown","_onMouseUp","highlightNode","html","location","type","overlay","_this3","_getEdgeOverlay","connect","stroke","strokeWidth","fill","data","nodes","edges","_renderNodes"],"mappings":"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"}